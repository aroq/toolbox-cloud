#!/usr/bin/env variant
# vi: ft=yaml

bindParamsFromEnv: true
autoenv: true

parameters:
# - name: AWS_ACCESS_KEY_ID
  # type: string
# - name: AWS_SECRET_ACCESS_KEY
  # type: string
- name: AWS_DEFAULT_REGION
  type: string
# - name: AWS_SESSION_TOKEN
  # type: string
  # default: ""
# - name: AWS_SECURITY_TOKEN
  # type: string
  # default: ""
- name: terraform_dir
  type: string

tasks:
  exec:
    bindParamsFromEnv: true
    autoenv: true
    parameters:
    - name: cmd
      type: string
    steps:
    - task: core.exec
      arguments:
        cmd: |
          cd {{ .terraform_dir }}
          {{ .cmd }}

  initialize:
    parameters:
    - name: backend_config_file
      type: string
      default: backend.hcl
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        cmd: |
          cd {{ .terraform_dir }}
          echo "yes" | TF_INPUT="true" terraform init -backend-config={{ .backend_config_file }}
  plan:
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        cmd: |
          cd {{ .terraform_dir }}
          terraform plan
  apply:
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        cmd: |
          cd {{ .terraform_dir }}
          terraform apply -input=false -auto-approve

  destroy:
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        cmd: |
          cd {{ .terraform_dir }}
          terraform destroy -input=false -auto-approve

  output:
    parameters:
    - name: output_name
      type: string
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        cmd: |
          cd {{ .terraform_dir }}
          terraform output {{ .output_name }}


