#!/usr/bin/env variant
# vi: ft=yaml

# bindParamsFromEnv: true
autoenv: true

parameters:
- name: CLOUDSDK_CORE_PROJECT
  type: string

- name: CLOUDSDK_COMPUTE_ZONE
  type: string

- name: key_file
  type: string

steps:
- task: before
- task: exec
  arguments:
    cmd: |
      gcloud {{ .args | join " " }}
- task: after

tasks:
  core:
    import: .toolbox/core/variant-lib/utils.yaml
  cloud:
    tasks:
      aws:
        import: .toolbox/tools/cloud/variant-lib/utils.aws.yaml
  before:
    steps:
    - task: cloud.aws.chamber.read.to_file
      arguments:
        service: toolbox/gpg
        key: private_gpg_key_zebra
        dir_name: /root/.secrets
        file_name: key.gpg
    - task: core.gpg.import_key
    - task: core.git-secret.reveal
      arguments:
        secret_file: "{{ .key_file }}"
    - task: activate-service-account

  after:
    steps:
    - task: core.git-secret.delete
      arguments:
        secret_file: "{{ .key_file }}"

  activate-service-account:
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        title: "Google Cloud :: Set project & activate service account"
        cmd: |
          gcloud config set project {{ .CLOUDSDK_CORE_PROJECT }}
          gcloud auth activate-service-account --key-file={{ .key_file }}

  get-credentials:
    parameters:
    - name: CLOUDSDK_CONTAINER_CLUSTER
      type: string
    autoenv: true
    steps:
    - task: core.exec
      arguments:
        title: "Google Cloud :: Cluster :: Get credentials"
        cmd: |
          gcloud container clusters get-credentials {{ .CLOUDSDK_CONTAINER_CLUSTER }}

